{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;AAEA,wDAAqC;AACrC,4DAA+B;AAS/B,wFAAwF;AACxF,0FAA0F;AAE1F,SAAwB,YAAY,CAAC,GAAG,OAAqB;IAC5D,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,CAAC;IAE7B,KAAK,MAAM,MAAM,IAAI,GAAG;QACvB,IAAI,CAAC,iBAAY,CAAC,GAAG,CAAC,MAAM,CAAC;YAC5B,MAAM,IAAI,KAAK,CAAC,qCAAqC,MAAM,GAAG,GAAG,mBAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAEjF,MAAM,OAAO,GAAG;QACf,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;KACxB,CAAC;IAEX,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;QACzB,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,MAAoB,CAAC;YACpC,OAAO,IAAI,EAAE,CAAC;QAEf,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IACrC,CAAC,CAAC;AACH,CAAC;AAjBD,+BAiBC","sourcesContent":["import type { RequestHandler } from \"express\";\nimport type HttpMethod from \"./http-method.type\";\nimport knownMethods from \"./methods\";\nimport hint from \"./hint.impl\";\n\nexport { default as HttpMethod } from \"./http-method.type\";\n\n/** @deprecated Use `HttpMethod` instead */\nexport type NodeHttpMethod = HttpMethod;\n\nexport { default as ExpressHttpMethod } from \"./express-http-method.type\";\n\n// TODO: export default function allowMethods(...methods: HttpMethod[]): RequestHandler;\n// TODO: export default function allowMethods(config: AllowMethodsConfig): RequestHandler;\n\nexport default function allowMethods(...methods: HttpMethod[]): RequestHandler {\n\tconst set = new Set(methods);\n\n\tfor (const method of set)\n\t\tif (!knownMethods.has(method))\n\t\t\tthrow new Error(`Unknown HTTP method encountered: \"${method}\"` + hint(method));\n\n\tconst headers = {\n\t\tAllow: Array.from(set).join(\", \"),\n\t} as const;\n\n\treturn (req, res, next) => {\n\t\tif (set.has(req.method as HttpMethod))\n\t\t\treturn next();\n\n\t\tres.header(headers).sendStatus(405);\n\t};\n}\n"]}