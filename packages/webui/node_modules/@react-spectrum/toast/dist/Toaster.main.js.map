{"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;CAUC;;;;;;;;;AAoBM,MAAM,0DAAiB,CAAA,GAAA,0BAAY,EAAE;AAErC,SAAS,0CAAQ,KAA0B;IAChD,IAAI,YACF,QAAQ,SACR,KAAK,EACN,GAAG;IAEJ,IAAI,MAAM,CAAA,GAAA,mBAAK,EAAE;IACjB,IAAI,eAAC,WAAW,EAAC,GAAG,CAAA,GAAA,oCAAa,EAAE,OAAO,OAAO;IACjD,IAAI,cAAC,UAAU,kBAAE,cAAc,EAAC,GAAG,CAAA,GAAA,kCAAW;IAC9C,IAAI,gBAAC,YAAY,EAAC,GAAG,CAAA,GAAA,gDAAsB;IAE3C,IAAI,CAAC,UAAU,UAAU,GAAG,CAAA,GAAA,oBAAM,EAAE;YACO;QAAzC,IAAI,CAAC,MAAM,QAAQ,EAAE,QAAQ,QAAQ,CAAC,GAAG,EAAA,mBAAA,MAAM,SAAS,cAAf,uCAAA,iBAAiB,KAAK,CAAC,SAAQ,EAAE;QAC1E,OAAO;YAAC;YAAK;SAAM;IACrB,GAAG;QAAC,MAAM,SAAS;KAAC;IAEpB,IAAI,yBACF,0DAAC,CAAA,GAAA,qCAAO;QAAE,cAAc;YAAC,YAAY;QAAa;qBAChD,0DAAC,CAAA,GAAA,gCAAS,uBACR,0DAAC,0CAAe,QAAQ;QAAC,OAAO;qBAC9B,0DAAC;QACE,GAAG,CAAA,GAAA,gCAAS,EAAE,aAAa,WAAW;QACvC,KAAK;QACL,iBAAe;QACf,kBAAgB;QAChB,WAAW,CAAA,GAAA,oCAAS,EAClB,CAAA,GAAA,mDAAmB,GACnB,iCACA;YAAC,cAAc;QAAc;OAE9B;QAO4B;IAAvC,qBAAO,CAAA,GAAA,yCAAO,EAAE,YAAY,CAAC,UAAU,CAAA,gBAAA,yBAAA,mCAAA,4BAAA,2BAAA,gBAAoB,SAAS,IAAI;AAC1E","sources":["packages/@react-spectrum/toast/src/Toaster.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaToastRegionProps, useToastRegion} from '@react-aria/toast';\nimport {classNames} from '@react-spectrum/utils';\nimport {FocusScope, useFocusRing} from '@react-aria/focus';\nimport {mergeProps} from '@react-aria/utils';\nimport {Provider} from '@react-spectrum/provider';\nimport React, {createContext, ReactElement, ReactNode, useMemo, useRef} from 'react';\nimport ReactDOM from 'react-dom';\nimport toastContainerStyles from './toastContainer.css';\nimport type {ToastPlacement} from './ToastContainer';\nimport {ToastState} from '@react-stately/toast';\nimport {useUNSAFE_PortalContext} from '@react-aria/overlays';\n\ninterface ToastContainerProps extends AriaToastRegionProps {\n  children: ReactNode,\n  state: ToastState<unknown>,\n  placement?: ToastPlacement\n}\n\nexport const ToasterContext = createContext(false);\n\nexport function Toaster(props: ToastContainerProps): ReactElement {\n  let {\n    children,\n    state\n  } = props;\n\n  let ref = useRef(null);\n  let {regionProps} = useToastRegion(props, state, ref);\n  let {focusProps, isFocusVisible} = useFocusRing();\n  let {getContainer} = useUNSAFE_PortalContext();\n\n  let [position, placement] = useMemo(() => {\n    let [pos = 'bottom', place = 'center'] = props.placement?.split(' ') || [];\n    return [pos, place];\n  }, [props.placement]);\n\n  let contents = (\n    <Provider UNSAFE_style={{background: 'transparent'}}>\n      <FocusScope>\n        <ToasterContext.Provider value={isFocusVisible}>\n          <div\n            {...mergeProps(regionProps, focusProps)}\n            ref={ref}\n            data-position={position}\n            data-placement={placement}\n            className={classNames(\n              toastContainerStyles,\n              'react-spectrum-ToastContainer',\n              {'focus-ring': isFocusVisible}\n            )}>\n            {children}\n          </div>\n        </ToasterContext.Provider>\n      </FocusScope>\n    </Provider>\n  );\n\n  return ReactDOM.createPortal(contents, getContainer?.() ?? document.body);\n}\n"],"names":[],"version":3,"file":"Toaster.main.js.map"}